generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at")

  // Relationships
  recommendations Recommendation[]
  sessions        UserSession[]

  // JSONB fields
  preferences Json?

  @@map("users")
}

model Location {
  id        String   @id @default(cuid())
  name      String
  latitude  Float
  longitude Float
  category  String
  createdAt DateTime @default(now()) @map("created_at")

  // Relationships
  recommendations Recommendation[]

  // JSONB fields
  metadata Json?

  @@map("locations")
}

model Recommendation {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  locationId String  @map("location_id")
  createdAt DateTime @default(now()) @map("created_at")

  // Relationships
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  location Location @relation(fields: [locationId], references: [id], onDelete: Cascade)

  // JSONB fields
  aiContext Json? @map("ai_context")

  @@map("recommendations")
}

model UserSession {
  id           String   @id @default(cuid())
  userId       String   @map("user_id")
  refreshToken String   @unique @map("refresh_token")
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")

  // Relationships
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_sessions")
}